#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.3 on Mon Nov 29 11:32:44 2021
#
from ec2_functions import *
from datetime import datetime, timedelta
import wx

# begin wxGlade: dependencies
import wx.adv
import wx.grid
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((662, 786))
        self.SetTitle("AWS Monitor ")
        self.SetBackgroundColour(wx.Colour(6, 26, 76))
        self.SetForegroundColour(wx.Colour(245, 251, 177))

        self.panel = wx.Panel(self, wx.ID_ANY)

        grid_sizer_1 = wx.FlexGridSizer(10, 1, 0, 0)

        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)

        text_1 = wx.StaticText(self.panel, wx.ID_ANY, "Running Instances:      ")
        sizer_2.Add(text_1, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 0)

        self.refresh_button = wx.Button(self.panel, wx.ID_ANY, "Refresh")
        sizer_2.Add(self.refresh_button, 0, wx.ALL, 3)

        region_text_copy = wx.StaticText(self.panel, wx.ID_ANY, "Region:      ", style=wx.ALIGN_RIGHT)
        region_text_copy.SetMinSize((150, 22))
        sizer_2.Add(region_text_copy, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 0)

        self.reg_sel_dropdown = wx.ComboBox(self.panel, wx.ID_ANY, choices=["eu-north-1", "us-west-1", "us-east-2", "ap-south-1", "sa-east-1"], style=wx.CB_DROPDOWN)
        self.reg_sel_dropdown.SetMinSize((181, 34))
        sizer_2.Add(self.reg_sel_dropdown, 0, wx.ALL, 3)

        self.grid = wx.grid.Grid(self.panel, wx.ID_ANY, size=(1, 1))
        self.grid.CreateGrid(20, 3)
        self.grid.SetMinSize((620, 200))
        self.grid.SetColLabelValue(0,"Instance ID")
        self.grid.SetColSize(0,200)
        self.grid.SetColLabelValue(1,"Instance Type")
        self.grid.SetColSize(1,150)
        self.grid.SetColLabelValue(2,"Security Group")
        self.grid.SetColSize(2,270)
        grid_sizer_1.Add(self.grid, 1, wx.ALL | wx.EXPAND, 1)

        self.new_instance_button = wx.Button(self.panel, wx.ID_ANY, "Create New Instance")
        grid_sizer_1.Add(self.new_instance_button, 1, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 6)

        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1.Add(sizer_4, 1, wx.EXPAND, 0)

        label_1 = wx.StaticText(self.panel, wx.ID_ANY, "Instance ID: ")
        label_1.SetMinSize((155, 26))
        sizer_4.Add(label_1, 0, wx.ALL | wx.EXPAND, 10)

        self.id_input = wx.TextCtrl(self.panel, wx.ID_ANY, "")
        self.id_input.SetMinSize((390, 40))
        sizer_4.Add(self.id_input, 0, wx.ALL | wx.EXPAND, 3)

        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1.Add(sizer_1, 1, wx.ALIGN_CENTER, 0)

        self.run_button = wx.Button(self.panel, wx.ID_ANY, "Run Instance")
        self.run_button.SetMinSize((163, 34))
        sizer_1.Add(self.run_button, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 3)

        self.stop_button = wx.Button(self.panel, wx.ID_ANY, "Stop Instance")
        sizer_1.Add(self.stop_button, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 3)

        self.terminate_button = wx.Button(self.panel, wx.ID_ANY, "Terminate Instance")
        self.terminate_button.SetMinSize((165, 34))
        sizer_1.Add(self.terminate_button, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 3)
        
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1.Add(sizer_5, 1, wx.EXPAND, 0)

        label_2 = wx.StaticText(self.panel, wx.ID_ANY, "Monitor Instance ID: ")
        sizer_5.Add(label_2, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        self.monitor_in = wx.TextCtrl(self.panel, wx.ID_ANY, "")
        self.monitor_in.SetMinSize((390, 40))
        sizer_5.Add(self.monitor_in, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 3)

        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1.Add(sizer_6, 1, wx.EXPAND, 0)

        label_3 = wx.StaticText(self.panel, wx.ID_ANY, "From:")
        label_3.SetMinSize((180, 22))
        sizer_6.Add(label_3, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        self.datepicker_from = wx.adv.DatePickerCtrl(self.panel, wx.ID_ANY)
        sizer_6.Add(self.datepicker_from, 0, 0, 0)

        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1.Add(sizer_7, 1, wx.EXPAND, 0)

        label_4 = wx.StaticText(self.panel, wx.ID_ANY, "To:")
        label_4.SetMinSize((177, 22))
        sizer_7.Add(label_4, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        self.datepicker_to = wx.adv.DatePickerCtrl(self.panel, wx.ID_ANY)
        sizer_7.Add(self.datepicker_to, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 3)

        self.monitor_button = wx.Button(self.panel, wx.ID_ANY, "Monitor Instance")
        grid_sizer_1.Add(self.monitor_button, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 3)

        self.output_2 = wx.TextCtrl(self.panel, wx.ID_ANY, "")
        self.output_2.SetMinSize((660, 200))
        grid_sizer_1.Add(self.output_2, 0, 0, 0)

        self.panel.SetSizer(grid_sizer_1)

        self.Layout()
        # end wxGlade
        # Bind Functions to Buttons
        self.Bind(wx.EVT_BUTTON, self.showFrame, self.new_instance_button)

        self.Bind(wx.EVT_BUTTON, self.selectRegion, self.refresh_button)

        self.Bind(wx.EVT_BUTTON, self.runInstance, self.run_button)

        self.Bind(wx.EVT_BUTTON, self.stopInstance, self.stop_button)

        self.Bind(wx.EVT_BUTTON, self.terminateInstance, self.terminate_button)

        self.Bind(wx.EVT_BUTTON, self.monitorInstance, self.monitor_button)


    # Declare functions for main GUI
    def showFrame(self, event):
        """
        Shows the frame and shows the message sent in the
        text control
        """
        new_frame = CreateInstance(parent=self.panel)
        new_frame.Show()

    def selectRegion(self, event):
        self.region = self.reg_sel_dropdown.GetValue()
        self.get_instances = get_running_instances(self.region)
        #self.grid.AppendText(self.get_instances)
        print(self.get_instances)
        for row in range(len(self.get_instances)):
            for col in range(3):
                self.grid.SetCellValue(row,col,self.get_instances[row][col])
      #  event.Skip()
    
    def runInstance(self, event):
        self.region = self.reg_sel_dropdown.GetValue()
        self.instanceID = self.id_input.GetValue()
        self.output = start_instance(self.instanceID, self.region )
     #   event.Skip()

    def stopInstance(self, event):
        self.region = self.reg_sel_dropdown.GetValue()
        self.instanceID = self.id_input.GetValue()
        self.output = stop_instance(self.instanceID, self.region)
     #   event.Skip()
    
    def terminateInstance(self,event):
        self.region = self.reg_sel_dropdown.GetValue()
        self.instanceID = self.id_input.GetValue()
        self.output = terminate_instance(self.instanceID, self.region)

    def monitorInstance(self, event):
        self.region = self.reg_sel_dropdown.GetValue()
        self.instanceID = self.monitor_in.GetValue()
        self.From = self.datepicker_from.GetValue()
        self.To = self.datepicker_to.GetValue()
        self.startTime = str(self.From.Format('%d/%m/%y'))
        self.endTime = str(self.To.Format('%d/%m/%y'))
        self.response = monitor_cpu(self.instanceID, self.startTime , self.endTime, self.region)
        self.output_2.SetValue(str("CPU Utilization: " + str(self.response)))
        print(self.response)
# end of class MyFrame

class CreateInstance(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: CreateInstance.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((340, 471))
        self.SetTitle("Create Instance")
        self.SetBackgroundColour(wx.Colour(6, 26, 76))
        self.SetForegroundColour(wx.Colour(245, 251, 177))

        self.panel_1 = wx.Panel(self, wx.ID_ANY)

        sizer_1 = wx.BoxSizer(wx.VERTICAL)

        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)

        label_6 = wx.StaticText(self.panel_1, wx.ID_ANY, "")
        sizer_2.Add(label_6, 0, 0, 0)

        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(sizer_3, 1, wx.EXPAND, 0)

        label_1 = wx.StaticText(self.panel_1, wx.ID_ANY, "AMI:")
        sizer_3.Add(label_1, 0, 0, 0)

        self.ami_in = wx.ComboBox(self.panel_1, wx.ID_ANY, choices=["ami-0bd9c26722573e69b", "ami-09733597242dc581b", ""], style=wx.CB_DROPDOWN)
        sizer_3.Add(self.ami_in, 0, 0, 0)

        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(sizer_4, 1, wx.EXPAND, 0)

        label_2 = wx.StaticText(self.panel_1, wx.ID_ANY, "Intance type:")
        sizer_4.Add(label_2, 0, 0, 0)

        self.instance_t_in = wx.ComboBox(self.panel_1, wx.ID_ANY, choices=["t3.micro"], style=wx.CB_DROPDOWN)
        sizer_4.Add(self.instance_t_in, 0, 0, 0)

        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(sizer_5, 1, wx.EXPAND, 0)

        label_3 = wx.StaticText(self.panel_1, wx.ID_ANY, "Key:")
        sizer_5.Add(label_3, 0, 0, 0)

        self.key_in = wx.ComboBox(self.panel_1, wx.ID_ANY, choices=["JosueMessbahKeyPair"], style=wx.CB_DROPDOWN)
        sizer_5.Add(self.key_in, 0, 0, 0)

        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(sizer_6, 1, wx.EXPAND, 0)

        label_4 = wx.StaticText(self.panel_1, wx.ID_ANY, "Security Group:")
        sizer_6.Add(label_4, 0, 0, 0)

        self.sec_group_in = wx.ComboBox(self.panel_1, wx.ID_ANY, choices=["JosueMessbah"], style=wx.CB_DROPDOWN)
        sizer_6.Add(self.sec_group_in, 0, 0, 0)

        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(sizer_7, 1, wx.EXPAND, 0)

        label_5 = wx.StaticText(self.panel_1, wx.ID_ANY, "Region")
        sizer_7.Add(label_5, 0, 0, 0)

        self.region_in = wx.ComboBox(self.panel_1, wx.ID_ANY, choices=["eu-north-1", "us-west-1", "us-east-2", "ap-south-1", "sa-east-1"], style=wx.CB_DROPDOWN)
        sizer_7.Add(self.region_in, 0, 0, 0)

        self.Create = wx.Button(self.panel_1, wx.ID_ANY, "Create")
        sizer_2.Add(self.Create, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.TOP, 0)

        self.panel_1.SetSizer(sizer_1)

        self.Layout()
        # end wxGlade

        # Bind functions to buttons 
        self.Bind(wx.EVT_BUTTON, self.createInstance, self.Create)

    # Declare Functions
    def createInstance(self, event):
        self.ima = self.ima_in.GetValue()
        self.type_i = self.instance_t_in.GetValue()
        self.key = self.key_in.GetValue()
        self.sg = self.sec_group_in.GetValue()
        self.region = self.region_in.GetValue()
        self.response = create_instance(self.ima,self.type_i,self.key,self.sg,self.region)
        print(self.response)

# end of class CreateInstance

class MyApp(wx.App):
    def OnInit(self):
        self.AWS_Main = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.AWS_Main)
        self.AWS_Main.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
